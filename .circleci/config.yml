version: 2.1

jobs:
  #       ------------------ UNIX ------------------
  gradle-build-unix:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - gradle-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
      - run:
          name: "gradle assemble unix"
          command: "./gradlew assemble --no-configuration-cache --no-build-cache --no-configure-on-demand"
      - save_cache:
          paths:
            - ~/.gradle/wrapper/
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches/
          key: gradle-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
  gradle-build-test-unix:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - gradle-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
      - run:
          name: "Testing of the internal-convention-plugin"
          command: "./gradlew :internal-convention-plugin:test --no-configuration-cache --no-build-cache --no-configure-on-demand"
      - run:
          name: "Save test results unix"
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
  gradle-unit-test-unix:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - gradle-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
      - run:
          name: "Run unit tests in unix"
          command: "./gradlew test --no-configuration-cache --no-build-cache --no-configure-on-demand"
      - run:
          name: "Save test results unix"
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
  gradle-integration-test-unix:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - checkout
      - restore_cache:
          keys:
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - gradle-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
      - run:
          name: "Run integration tests in unix"
          command: "./gradlew integrationTest --no-configuration-cache --no-build-cache --no-configure-on-demand"
      - run:
          name: "Save test results unix"
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
  gradle-functional-test-unix:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - checkout
      - restore_cache:
          keys:
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
            - gradle-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "settings.gradle.kts" }}
      - run:
          name: "Run functional tests in unix"
          command: "./gradlew functionalTest --no-configuration-cache --no-build-cache --no-configure-on-demand"
      - run:
          name: "Save test results unix"
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results

workflows:
  gradle-build-unix-workflow:
    jobs:
      - gradle-build-unix
  gradle-verify-unix-fast-workflow:
    jobs:
#      - gradle-build-test-unix   test convention plugin, perhaps it's overkill here
      - gradle-unit-test-unix
      - gradle-integration-test-unix
  gradle-verify-unix-slow-workflow:
    jobs:
      - gradle-functional-test-unix
